<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ows.edu.dao.CombineShippingDao">
 	<resultMap id="orderItemMap" type="orderItem">
		<result property="orderItemNo" column="OI_NO"/>
		<result property="orderNo" column="ORD_NO"/>
		<result property="itemCode" column="ITN_CODE"/>
		<result property="qty" column="OI_QTY"/>
	</resultMap>
 	<resultMap id="itemMap" type="item">
		<result property="itemCode" column="ITM_CODE"/>
		<result property="itemName" column="ITM_NAME"/>
		<result property="vendorNo" column="V_NO"/>
	</resultMap>
 	<resultMap id="releaseMap" type="release">
		<result property="releaseNo" column="RLS_NO"/>
		<result property="orderNo" column="ORD_NO"/>
		<result property="employeeId" column="EMP_ID"/>
		<result property="releaseDate" column="RLS_DT"/>
		<result property="releaseDone" column="RLS_DN"/>
	</resultMap>
 	<resultMap id="combineShippingMap" type="combineShipping">
		<result property="orderItemNo" column="OI_NO"/>
		<result property="orderCheckDate" column="CS_ORD_CHK_DT"/>
		<result property="receiveCheck" column="CS_RCV_CHK"/>
		<result property="receiveUnrelease" column="CS_RCV_URLS"/>
		<result property="deliveryUnrelease" column="CS_DLV_URLS"/>
		<result property="deliverCheck" column="CS_DLV_CHK"/>
		<result property="employeeId" column="EMP_ID"/>
		<result property="releaseScheduleDate" column="CS_RLS_SCH_DT"/>
		<result property="receiveDate" column="CS_RCV_DT"/>
		<result property="releaseQuantity" column="CS_RLS_QTY"/>
		<result property="receiveQuantity" column="CS_RCV_QTY"/>
		<result property="deliveryQuantity" column="CS_DLV_QTY"/>
		
		<association property="orderItem" javaType="orderItem">
			<result property="orderItemNo" column="OI_NO"/>
			<result property="orderNo" column="ORD_NO"/>
			<result property="itemCode" column="ITN_CODE"/>
			<result property="qty" column="OI_QTY"/>
		</association>
		<association property="item" javaType="item">
			<result property="itemCode" column="ITM_CODE"/>
			<result property="itemName" column="ITM_NAME"/>
			<result property="vendorNo" column="V_NO"/>
		</association>
		<association property="release" javaType="release">
			<result property="releaseNo" column="RLS_NO"/>
			<result property="orderNo" column="ORD_NO"/>
			<result property="employeeId" column="EMP_ID"/>
			<result property="releaseDate" column="RLS_DT"/>
			<result property="releaseDone" column="RLS_DN"/>
		</association>
	</resultMap>
	
	<resultMap id="employeeMap" type="employee">
		<result property="employeeId" column="EMP_ID"/>
		<result property="employeeName" column="EMP_NAME"/>
	</resultMap>
	<resultMap id="vendorMap" type="vendor">
		<result property="vendorNo" column="V_No"/>
		<result property="vendorName" column="V_NAME"/>
	</resultMap>
	<!-- 수령 대상 업체 조회. 날짜 필터링 포함. -->
	<select id="getVendorList" resultMap="vendorMap">
		SELECT DISTINCT V.V_NO, V.V_NAME
		FROM TB_CMB_SHP CS
		JOIN TB_VND V ON (CS.V_NO=CS.V_NO)
		<choose>
			<!-- 수령 할 일: 출고예정 기간 필터링 -->
			<when test='toDo == 1'>
			<![CDATA[
			WHERE DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
				AND DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
			]]>
				AND CS.CS_RCV_CHK=0
				AND CS.CS_DLV_CHK=0
			</when>
			<!-- 수령 한 일: 수령한 기간 필터링 -->
			<otherwise>
			<![CDATA[
			WHERE DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
				AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
			]]>
				AND CS.CS_RCV_CHK=1
				AND CS.CS_DLV_CHK=0
			</otherwise>
		</choose>
		
	</select>
	
	<!-- 담당자별 필터링을 위한 담당자 조회. -->
	<!-- <select id="selectAssigneeListByDate" resultMap="employeeMap"> -->
	<select id="selectAssigneeListByDate" resultType="string">
		<!-- SELECT DISTINCT E.EMP_ID, E.EMP_NAME -->
		SELECT DISTINCT E.EMP_NAME
		FROM TB_CMB_SHP CS
		JOIN TB_EMP E ON (CS.EMP_ID=E.EMP_ID)
		<choose>
		<!-- 전달 할 일: 수령한 기간 필터링 -->
		<when test='toDo == 1'>
			<![CDATA[
			WHERE DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
				AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
			]]>
			AND CS.CS_RCV_CHK=1
			AND CS.CS_DLV_CHK=0
		</when>
		<!-- 전달 한 일: 전달한 기간 필터링 -->
		<otherwise>
			<![CDATA[
			WHERE DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
				AND DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
			]]>
			AND CS.CS_RCV_CHK=1
			AND CS.CS_DLV_CHK=1
		</otherwise>
		</choose>
		ORDER BY E.EMP_NAME
	</select>

	<select id="countAll" resultType="int">
		SELECT COUNT(*) FROM TB_CMB_SHP
	</select>
	
	<!-- 담당사원을 기준으로 수령 목록 조회.('전달'탭이 선택된 경우.) -->
	<select id="selectReceiptOrderItemNoList" resultType="string">
			SELECT OI.OI_NO
			FROM TB_CMB_SHP CS
			JOIN TB_ORD_ITM OI ON (CS.OI_NO = OI.OI_NO)
		<where>
			<choose>
				<!-- 수령 한 일: (수령O && 전달X) -->
				<when test="toDo != 1">
					<!-- id(o) + date(x) : id 기준으로 미완료 전체. -->
					<if test='(!employeeId.equals("")) and (startDate == null)'>
						AND CS.EMP_ID=#{employeeId}
					</if>
					<!-- id(x) + date(o) : 미완료 전체를 기간으로 필터링. -->
					<if test='(employeeId.equals("")) and (startDate != null)'>
						<![CDATA[
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- id(o) + date(o) : 미완료 전체를 id와 기간으로 필터링. -->
					<if test='(!employeeId.equals("")) and (startDate != null)'>
						AND CS.EMP_ID=#{employeeId}
						<![CDATA[
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
						
					</if>
					<!-- WHERE절 불필요. : id(x) + date(x) : 미완료 전체. -->
						AND CS.CS_RCV_CHK=1
						AND CS.CS_DLV_CHK=0
				</when>
				<!-- 수령 할 일: (수령X && 전달X) -->
				<otherwise>
					<!-- id(o) + date(x) : id 기준으로 미완료 전체. -->
					<if test='(!employeeId.equals("")) and (startDate == null)'>
						AND CS.EMP_ID=#{employeeId}
					</if>
					<!-- id(x) + date(o) : 미완료 전체를 기간으로 필터링. -->
					<if test='(employeeId.equals("")) and (startDate != null)'>
						<![CDATA[
						AND DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- id(o) + date(o) : 미완료 전체를 id와 기간으로 필터링. -->
					<if test='(!employeeId.equals("")) and (startDate != null)'>
						AND CS.EMP_ID=#{employeeId}
						<![CDATA[
						AND DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RLS_SCH_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
						
					</if>
					<!-- WHERE절 불필요. : id(x) + date(x) : 미완료 전체. -->
						AND CS.CS_RCV_CHK=0
						AND CS.CS_DLV_CHK=0
				</otherwise>
			</choose>
		</where>
	</select>
	<select id="selectAReceipt" parameterType="string" resultMap="combineShippingMap">
		SELECT OI.OI_NO, I.ITM_NAME, OI.ITM_CODE
			, CS.CS_RCV_URLS, CS.CS_RLS_QTY, CS.CS_RCV_QTY
			, CS.CS_RCV_CHK
		FROM TB_CMB_SHP CS
		JOIN TB_ORD_ITM OI ON (CS.OI_NO = OI.OI_NO)
		JOIN TB_ITM I ON (I.ITM_CODE = OI.ITM_CODE)
		JOIN TB_RLS R ON (OI.ORD_NO = R.ORD_NO)
		WHERE OI.OI_NO=#{orderItemNo}
	</select>
	
	<!-- 담당사원을 기준으로 전달 목록 조회. -->
	<select id="selectDeliveryOrderItemNoList" resultType="string">
		SELECT OI.OI_NO
		FROM TB_CMB_SHP CS
		JOIN TB_ORD_ITM OI ON (CS.OI_NO = OI.OI_NO)
			<!-- toDo != 1 : 한 일(수령O && 전달O) (기간 기준: 수령일) -->
			<choose>
				<when test="toDo != 1">
					<where>
					<!-- id(o) + date(x) : id 기준으로 완료 전체. -->
					<if test='(!employeeId.equals("")) and (startDate == null)'>
						AND CS.EMP_ID=#{employeeId}
					</if>
					<!-- id(x) + date(o) : 완료 전체를 기간으로 필터링. -->
					<if test='(employeeId.equals("")) and (startDate != null)'>
			 			<![CDATA[
						AND DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- id(o) + date(o) : 완료 전체를 id와 기간으로 필터링. -->
		 			<if test='(!employeeId.equals("")) and (startDate != null)'>
						AND CS.EMP_ID=#{employeeId}
						<![CDATA[
						AND DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_DLV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- WHERE절 불필요. : id(x) + date(x) : 완료 전체. -->
					AND CS.CS_RCV_CHK=1
					AND CS.CS_DLV_CHK=1
				</where>
				</when>
				
				<!-- toDo == 1 : 할 일. (수령O && 전달X) (기간 기준: 수령일) -->
				<otherwise>
				<where>
					<!-- id(o) + date(x) : id 기준으로 한 일 전체. -->
					<if test='(!employeeId.equals("")) and (startDate == null)'>
						AND CS.EMP_ID=#{employeeId}
					</if>
					<!-- id(x) + date(o) : 미완료 전체를 기간으로 필터링. -->
					<if test='(employeeId.equals("")) and (startDate != null)'>
			 			<![CDATA[
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- id(o) + date(o) : 미완료 전체를 id와 기간으로 필터링. -->
		 			<if test='(!employeeId.equals("")) and (startDate != null)'>
						AND CS.EMP_ID=#{employeeId}
						<![CDATA[
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
						AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
						]]>
					</if>
					<!-- WHERE절 불필요. : id(x) + date(x) : 미완료 전체. -->
					AND CS.CS_RCV_CHK=1
					AND CS.CS_DLV_CHK=0
				</where>
				</otherwise>
			</choose>
	</select>
	<select id="selectADelivery" parameterType="string" resultMap="combineShippingMap">
		SELECT OI.ORD_NO, R.RLS_NO, I.ITM_NAME, OI.ITM_CODE
			, CS.CS_DLV_URLS, CS.CS_RCV_QTY, CS.CS_DLV_QTY
			, OI.OI_QTY, CS.CS_DLV_CHK, OI.OI_NO
		FROM TB_CMB_SHP CS
		JOIN TB_ORD_ITM OI ON (CS.OI_NO = OI.OI_NO)
		JOIN TB_ITM I ON (I.ITM_CODE = OI.ITM_CODE)
		JOIN TB_RLS R ON (OI.ORD_NO = R.ORD_NO)
		WHERE OI.OI_NO=#{orderItemNo}
	</select>
	
	<!-- 수령항목 정보 update. -->
	<update id="updateAReceipt" parameterType="combineShipping">
		UPDATE TB_CMB_SHP
		SET CS_RCV_URLS=#{receiveUnrelease}
			, CS_RCV_CHK=1
			, CS_RCV_DT=DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		WHERE OI_NO=#{orderItemNo}
	</update>
	
	<!-- 전달항목 정보 update. -->
<!-- 	<update id="updateADelivery" parameterType="combineShipping"> -->
	<update id="updateADelivery" parameterType="int">
		UPDATE TB_CMB_SHP
		SET CS_DLV_QTY=CS_RCV_QTY
		    , CS_DLV_URLS=0
		    , CS_DLV_CHK=1
		    , CS_DLV_DT=DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		WHERE OI_NO=#{orderItemNo}
<!-- 		UPDATE TB_CMB_SHP
		SET CS_DLV_QTY=#{deliveryQuantity}
		    , CS_DLV_URLS=#{deliveryUnrelease}
		    , CS_DLV_CHK=#{deliverCheck}
		WHERE OI_NO=#{orderItemNo} -->
	</update>
	
	<select id="getReceiptListByDate" resultMap="combineShippingMap">
		SELECT OI.OI_NO, I.ITM_NAME, OI.ITM_CODE
			, CS.CS_RCV_URLS, CS.CS_RCV_QTY, CS.CS_RCV_CHK
		FROM TB_CMB_SHP CS
		JOIN TB_ORD_ITM OI ON (CS.OI_NO = OI.OI_NO)
		JOIN TB_ITM I ON (I.ITM_CODE = OI.ITM_CODE)
		JOIN TB_RLS R ON (OI.ORD_NO = R.ORD_NO)
		<![CDATA[
		WHERE DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') >= STR_TO_DATE(#{startDate}, '%Y-%m-%d')
			AND DATE_FORMAT(CS_RCV_DT, '%Y-%m-%d') <= STR_TO_DATE(#{endDate}, '%Y-%m-%d')
		]]>
		ORDER BY I.ITM_NAME
	</select>
	
</mapper>


