<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ows.edu.dao.ReleaseInspectionDao">
<!-- 
 	<resultMap id="afterPickingMap" type="afterPicking">
		<association property="releaseInspection" javaType="releaseInspection">
			<result property="releaseInspectionQuantity" column="RI_QTY"/>
			<result property="employeeName" column="RI_EMP_NAME"/>
			<result property="releasePrintDate" column="RI_RLS_PRT_DT"/>
			<result property="receiptPrintDate" column="RI_RCPT_PRT_DT"/>
			<result property="releaseInspectionDate" column="RI_DT"/>
			<result property="orderItemNo" column="OI_NO"/>		
		</association>
		<association property="release" javaType="release">
			<result property="releaseCode" column="RLS_CODE"/>
			<result property="invoiceCode" column="RLS_RLS_IVC_CODE"/>
			<result property="employeeName" column="RLS_EMP_NAME"/>	
			<result property="shippingCompany" column="RLS_SHP_CPN"/>			
		</association>
		<association property="item" javaType="item">
			<result property="itemName" column="ITM_NAME"/>
			<result property="itemCode" column="ITM_CODE"/>
		</association>
		<association property="picking" javaType="picking">
			<result property="pickingNo" column="PIC_NO"/>
			<result property="pickingQuantity" column="PIC_QTY"/>
		</association>
		<association property="vendor" javaType="vendor">
			<result property="vendorName" column="V_NAME"/>
		</association>
		<association property="order" javaType="order">
			<result property="shippingDestination" column="ORD_SHP_DEST"/>			
			<result property="shippingCategory" column="ORD_SHP_CAT"/>			
			<result property="shippingWay" column="ORD_SHP_WAY"/>			
			<result property="orderNo" column="ORD_NO"/>			
		</association>
		<association property="packing" javaType="packing">
		</association>
		<association property="client" javaType="client">
			<result property="clientName" column="CLT_NAME"/>		
		</association>
	</resultMap>
 -->
<!-- 
 	<select id="selectAfterPickingList" resultMap="afterPickingMap">
		SELECT R.RLS_NO, I.ITM_NAME, I.ITM_CODE, PI.PIC_NO, PI.PIC_QTY
			, RI.RI_QTY, IFNULL(RI.RI_URLS, ' ') RI_URLS, IFNULL(PA.PAC_URLS, ' ') PAC_URLS, V.V_NAME, O.ORD_SHP_DEST
		    , O.ORD_SHP_CAT, O.ORD_SHP_WAY, E.EMP_NAME RI_EMP_NAME
		    , RI.RI_RLS_PRT_DT, RI.RI_RCPT_PRT_DT, RI.RI_DT, IFNULL(PA.PAC_BX_QTY, ' ') PAC_BX_QTY
		    , R.RLS_EMP_NAME, R.RLS_SHP_CPN, R.RLS_RLS_IVC_CODE, IFNULL(RI.RI_NT, ' ') RI_NT
		    , IFNULL(PA.PAC_NT, ' ') PAC_NT, IFNULL(R.RLS_RLS_NT, ' ') RLS_RLS_NT
		    , R.RLS_DN, O.ORD_NO, C.CLT_NAME, RI.OI_NO
		FROM TB_ORD O
		JOIN (SELECT RLS.RLS_NO RLS_NO, RLS.ORD_NO RLS_ORD_NO, EMP.EMP_NAME RLS_EMP_NAME
					, RLS_SHP_CPN, RLS.RLS_IVC_CODE RLS_RLS_IVC_CODE, RLS.RLS_NT RLS_RLS_NT
		            , RLS_DN
			  FROM TB_RLS RLS
		      JOIN TB_EMP EMP
				ON (RLS.EMP_ID=EMP.EMP_ID)
			) R
			ON (O.ORD_NO=R.RLS_ORD_NO)
		RIGHT JOIN TB_ORD_ITM OI
				ON (O.ORD_NO=OI.ORD_NO)
		JOIN TB_ITM I
			ON (OI.ITM_CODE=I.ITM_CODE)
		JOIN TB_VND V
			ON (I.V_NO=V.V_NO)
		JOIN TB_RLS_INSP RI
			ON (OI.OI_NO=RI.OI_NO)
		JOIN TB_PIC PI
			ON (OI.OI_NO=PI.OI_NO)
		JOIN TB_PAC PA
			ON (OI.OI_NO=PA.OI_NO)
		JOIN TB_EMP E
			ON (RI.EMP_ID=E.EMP_ID)
		JOIN TB_CLT C
			ON (C.CLT_NO=O.CLT_NO)
<where>
	배송구분 필터링: 전체/일반/긴급
   	<if test='shippingCategory.equals("일반")'>
		AND O.ORD_SHP_CAT='일반'
	</if>
	<if test='shippingCategory.equals("긴급")'>
		AND O.ORD_SHP_CAT='긴급'
	</if>
	배송방식 필터링: 전체/오스템/합배송
   	<if test='shippingWay.equals("오스템")'>
		AND O.ORD_SHP_WAY='오스템'
	</if>
	<if test='shippingWay.equals("합배송")'>
		AND O.ORD_SHP_WAY='합배송'
	</if>
	출고/미출고 필터링
   	<if test='(!released.equals("")) and (released.equals("출고"))'>
  	<if test='released.equals("출고")'>
		AND R.RLS_DN=1
	</if>
	<if test='(!released.equals("")) and (released.equals("미출고"))'>
	<if test='released.equals("미출고")'>
		AND ( R.RLS_DN!=1 OR ISNULL(R.RLS_DN) )
	</if>
	
	출고검수/패킹 담당자 필터링
    <if test='!assignee.equals("")'>
		AND (E.EMP_NAME = #{assignee} OR R.RLS_EMP_NAME = #{assignee})
	</if>
	
	주문번호 필터링
	<if test='orderNo != -1'>
 	<if test='!strOrderNo.equals("-1")'>
 		AND CONCAT(O.ORD_NO, '') LIKE CONCAT('%',#{orderNo},'%')
   		AND CONCAT(O.ORD_NO, '') LIKE CONCAT('%',#{strOrderNo},'%')
	</if>
	
	거래처 필터링
   	<if test='!clientName.equals("")'>
		AND C.CLT_NAME LIKE CONCAT('%',#{clientName},'%')
	</if>
	
	배송지 필터링
   	<if test='!shippingDestination.equals("")'>
 		AND O.ORD_SHP_DEST LIKE CONCAT('%',#{shippingDestination},'%')
 	</if>
 	업체명으로 필터링
   	<if test='!vendorName.equals("")'>
   		AND V.V_NAME LIKE CONCAT('%',#{vendorName},'%')
   	</if> 
	
</where>
		ORDER BY R.RLS_NO, I.ITM_NAME
 	</select> -->

 	
<!-- ========================================현주======================================== -->

	<!-- 검수수량 업데이트 --> 
	<update id="releaseInspectionQtyUpdate" parameterType="String">
		<!-- 출고검수 테이블에 출고검수 컬럼 넣고 이후에 set 해주기 -->	
		UPDATE TB_RLS_INSP
		INNER JOIN TB_BRCD ON TB_RLS_INSP.OI_NO = TB_BRCD.OI_NO
		INNER JOIN TB_ORD_ITM ON TB_BRCD.OI_NO = TB_ORD_ITM.OI_NO
			<!-- #이미 검수 였던거 다시 검수 눌렀을 때, RI_QTY 증가 x -->	
		SET tb_rls_insp.ri_qty = IF(TB_BRCD.BRCD_DN = 1, tb_rls_insp.ri_qty, tb_rls_insp.ri_qty + 1),
			<!-- #미출고였던거 검수로 바꾸었을 때, 미출고수량 하나 다운 -->
			TB_ORD_ITM.OI_URLS_QTY = IF(TB_BRCD.BRCD_DN = 0, TB_ORD_ITM.OI_URLS_QTY - 1 , TB_ORD_ITM.OI_URLS_QTY)
		    <!-- TB_BRCD.BRCD_DN = 1 -->
		WHERE TB_BRCD.BRCD_NO = #{barCode}
	</update>
	
	<!-- 미출고수량 업데이트 -->
	<update id="unRleaseQtyUpdate" parameterType="String">
		UPDATE TB_ORD_ITM
		INNER JOIN TB_BRCD ON TB_ORD_ITM.OI_NO = TB_BRCD.OI_NO
		INNER JOIN TB_RLS_INSP ON TB_RLS_INSP.OI_NO = TB_BRCD.OI_NO
			<!-- #이미 미출고 였던거 다시 미출고 눌렀을 때, OI_URLS_QTY 증가 x -->	
		SET TB_ORD_ITM.OI_URLS_QTY = IF(TB_BRCD.BRCD_DN = 0, TB_ORD_ITM.OI_URLS_QTY, TB_ORD_ITM.OI_URLS_QTY+1),
			<!-- #검수되었던거 미출고로 바꾸었을 때, 검수수량 하나 다운 -->	
			TB_RLS_INSP.RI_QTY = IF(TB_BRCD.BRCD_DN = 1, TB_RLS_INSP.RI_QTY - 1, TB_RLS_INSP.RI_QTY)
		    <!-- TB_BRCD.BRCD_DN = 0 -->
		WHERE TB_BRCD.BRCD_NO = #{barCode}
	</update>
	
	<update id="update" parameterType="Map">
		update TB_RLS_INSP set
		ri_qty = ri_qty + #{releaseInspectionQty}
		where oi_no = #{orderItemNo}
	</update>
	
	<update id="updateReleaseInspectionDate" parameterType="long">
		update TB_RLS_INSP
		set TB_RLS_INSP.ri_dt = now()
		where TB_RLS_INSP.oi_no in (select tb_ord_itm.oi_no
		from tb_ord_itm, tb_ord
		where tb_ord_itm.ord_no = tb_ord.ord_no
		and tb_ord.ord_no = #{orderNo})
	</update>
</mapper>